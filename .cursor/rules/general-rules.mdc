---
description: 请求时AI先了解项目
globs: 
alwaysApply: false
---
VP-180 项目架构与规范
项目概览
VP-180是一个自动化测试平台，主要用于设备测试，支持测试用例的创建、管理、执行和结果分析。
前端架构
前端基于Next.js框架开发，目录结构如下：
frontend/app: 页面组件，包含主要功能页面
frontend/components: 可复用UI组件
frontend/lib: 业务逻辑库和API服务
主要模块
测试用例管理
测试用例相关功能由frontend/components/TestCaseList.tsx组件实现，支持查看、选择、执行、编辑和删除测试用例。
测试执行
测试执行页面frontend/app/execute-all/page.tsx负责批量执行测试用例，并生成测试报告。
测试报告
测试报告页面frontend/app/test-cases/reports/page.tsx展示测试执行结果，包含通过率、失败用例等信息。
系统设置
系统设置页面frontend/app/settings/page.tsx提供SSH连接、串口、项目和IP设置功能。
API服务
API服务分为以下几类：
测试用例API: frontend/lib/api/test-cases.ts
系统设置API: frontend/lib/api/system-settings.ts
项目设置API: frontend/lib/api/project-settings.ts
数据存储
设置信息: data/settings.json
测试报告: data/report.json
开发规范
新增功能: 遵循现有代码结构和风格
错误处理: 统一使用toast组件显示错误信息
数据持久化: 通过API路由将数据写入JSON文件
UI组件: 使用shadcn/ui组件库，保持UI风格一致性
响应式设计: 支持不同设备屏幕尺寸
常见问题解决
测试用例执行失败: 检查SSH和串口连接设置
IP连接问题: 确认固定IP设置是否正确

执行后无法查看报告: 使用报告页面的刷新按钮获取最新数据